////////////////////////question 1///////////////
#include<stdio.h>
int c=0,s=0;
void merge(int arr[],int lb,int mid,int ub){
	int i=lb;
	int arr2[50];
	int j=mid+1;
	int k=lb;
	while(i<=mid && j<=ub){
		if(arr[i]<=arr[j]){
			arr2[k]=arr[i];
			i++;
		}
		else{
		   arr2[k]=arr[j];
		   j++; 
		}
		k++;
	}
	if(i>mid){
		while(j<=ub){
			arr2[k]=arr[j];
			j++;
			k++;
		}
	}
	else{
		while(i<=mid){
			arr2[k]=arr[i];
			i++;
			k++;
		}
		
	}
	for(k=lb;k<=ub;k++)
      arr[k]=arr2[k];
}
void mergesort(int arr[],int lb,int ub){
	int mid;
	if(lb<ub){
		mid=(lb+ub)/2;
		mergesort(arr,lb,mid);
		mergesort(arr,mid+1,ub);
		merge(arr,lb,mid,ub);
	}
}
int main(){
	int  arr[50];
	int n,i,j,t;
	printf("enter the test casess\n");
	scanf("%d",&t);
	while(t){
		printf("enter the no of element\n");
		scanf("%d",&n);
		for(i=0;i<n;i++){
			scanf("%d",&arr[i]);
		}
		mergesort(arr,0,n-1);
		printf("after sorting\n");
		for(i=0;i<n;i++){
			printf("%d,",arr[i]);
		}
		printf("\n%d, %d",c,s);
		t--;
	}
}


/////////////question 2/////////

///// quick sort////
#include<stdio.h>
//int start=0,end=0;
int c=0,s=0;
int partion(int arr[],int lb,int ub){
	int start=lb+1,temp;
	int end=ub;
	int pivort=arr[lb];
	while(start<end){
		
		   while(arr[start]<=pivort){
		   	start++;
		   	c++;
		   }
		   while(arr[end]>pivort){
		   	end--;
		   	c++;
		   }
			if(start<end){
			  temp=arr[start];
			  arr[start]=arr[end];
			  arr[end]=temp;
			  s++;
			}
	}
	//swap(arr[lb],arr[end]);
	    temp=arr[lb];
		arr[lb]=arr[end];
	    arr[end]=temp;
	    s++;
	return end;

		
	}

void quicksort(int arr[],int lb,int ub){
	int loc;
	if(lb<ub){
	
  	loc=partion(arr,lb,ub);
  	quicksort(arr,lb,loc-1);
  	quicksort(arr,loc+1,ub);
  }
}


int main(){
	int i,arr[10]={54,65,34,76,78,97,46,32,51,21};
	int lb=0,ub=10;
	printf("array before sorting\n");
	for(i=0;i<ub;i++){
		printf(",%d",arr[i]);
	}
	quicksort(arr,lb,ub-1);
	printf("\narray after sortinh\n");
	for(i=0;i<ub;i++){
		printf(",%d",arr[i]);
	}
	printf("s=%d c=%d",s,c);
	
}


/////////////question 3/////////
////       count sorting     ///////////

#include<stdio.h>
void counting(int arr[],int n){
	int i,max;
	max=arr[0];
		for(i=0;i<n;i++){
		if(arr[i]>max)
		  max=arr[i];
	}
	
	// initializng count array  values to 0;
	int count[max]={0};
	
	
	// frequency of element
	for(i=0;i<n;i++){
		count[arr[i]]++;
	}
	
	//printing count values
		for(i=0;i<=max;i++){
	           printf("[%d]",count[i]);
	}
	
	
	for(i=1;i<=max;i++){
	  count[i]=count[i]+count[i-1];
	}

   int b[n];
   for(i=n-1;i>=0;i--){
   	b[--count[arr[i]]]=arr[i];
   }
   // coping array value
   	for(i=0;i<n;i++){
		arr[i]=b[i];
	}
}
int main(){
	int arr[50]={1,5,9,3,2,3,0,9,2,1,9};
	int n=11;
	
	counting(arr,n);

   	puts("after sorting\n");
		for(int i=0;i<=n-1;i++){
	           printf("[%d]",arr[i]);
	}
	//int max=97;
	//printf("%c",max);
	
}
